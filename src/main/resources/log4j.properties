#log4j.debug
#Define The Root Logger with Appender file#Root logger option - This section will help to log the system generated logs in Selenium.txt file
#Here debug is the Logger level and file is used as an identifier
#Set the Appender file to be a file appender#Here Appender type is defined as RollingFileAppender
#Define the layout for file appender#layout is used to set the format of the output file
#conversionpattern is used to set the conversion type.
#Here the location of file is mentioned where the system generated logs would get saved
#maxFileSize denotes that after every 5000KB a new file will be created, means a single file will not save data more than 5000KB
#maxBackupIndex defines that how many backup files will be saved
#do not append the old file. Create a new log file everytime
log4j.rootLogger=DEBUG,file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} %F %-5p [%t] %c{2} %L - %m%n
log4j.appender.file.File=logs/Selenium.log
log4j.appender.file.maxFileSize=5000KB
log4j.appender.file.maxBackupIndex=3
log4j.appender.file.Append=false

#Application
#Here debug is the Logger level and file is used as an identifier.devpinoyLogger string will be passed to getLogger method of Logger class
log4j.logger.devpinoyLogger=DEBUG, dest1, stdlog
log4j.appender.dest1=org.apache.log4j.RollingFileAppender
log4j.appender.dest1.File=logs/application.log
log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
log4j.appender.dest1.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} %F %-5p [%t] %c{2} %L - %m%n
log4j.appender.dest1.maxFileSize=5000KB
log4j.appender.dest1.maxBackupIndex=3
log4j.appender.dest1.Append=false

#Console
log4j.appender.stdlog=org.apache.log4j.ConsoleAppender
log4j.appender.stdlog.layout=org.apache.log4j.PatternLayout
log4j.appender.stdlog.layout.ConversionPattern=[%d{MM-dd-yyyy HH:mm:ss}] %X{sessionId} %F %M %-5p [%t] %c{2} %L | %m%n


